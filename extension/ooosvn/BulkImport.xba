<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="BulkImport" script:language="StarBasic">REM  *****  BASIC  *****

&apos; Define oDlgBulkImport so we can close it properly in a seperate function
Public oDlgBulkImport As Object
Public oDlgBulkImportStart As Object
Public oDlgBulkImportEnd As Object
Public SearchPath As Object

Function BulkImportWizard
&apos; Starts the bulk import process

&apos; Load libraries
  If (Not GlobalScope.DialogLibraries.isLibraryLoaded(&quot;ooosvn&quot;)) Then
    GlobalScope.DialogLibraries.LoadLibrary(&quot;ooosvn&quot;)
  End If
LoadTools
  
&apos; Check dependencies, check scripts are installed, if not, install them.
sFirstRunCheck = FirstRunCheck
&apos; If the process has failed then error out.
If sFirstRunCheck = 0 then
	Msgbox(&quot;OOoSVN failed to be setup correctly, aborting.&quot;,48,&quot;OOoSVN error&quot;)
Exit Function
End If
  
  	aService = CreateUnoService(&quot;com.sun.star.util.PathSubstitution&quot;)
	sUserPath = aService.substituteVariables(&quot;$(home)&quot;, true)

&apos; Load the GUI
oDlgBulkImportStart = _
		CreateUnoDialog(DialogLibraries.ooosvn.DlgBulkImportStart)
	
&apos;	Dialog_Initialize

With oDlgBulkImportStart
		SearchPath = .getControl(&quot;txtSearchPath&quot;)
	End With
	
	
	SearchPath.Text = ConvertFromURL(sUserPath)
	
	oDlgBulkImportStart.execute
	
&apos;	oDlgBulkImportStart.dispose

&apos;FileSearch

End Function

Function PickDirectory
&apos; Show a directory picker

dim document   as object
Dim oDoc
Dim sDirectory As String
&apos;Dim ReadSearchPath As Object

oDoc = ThisComponent

  If (Not GlobalScope.DialogLibraries.isLibraryLoaded(&quot;ooosvn&quot;)) Then
    GlobalScope.DialogLibraries.LoadLibrary(&quot;ooosvn&quot;)
  End If
LoadTools

	aService = CreateUnoService(&quot;com.sun.star.util.PathSubstitution&quot;)
	sDirectory = aService.substituteVariables(&quot;$(home)&quot;, true)

&apos; Pull the directory across from the text box
	SearchPath = oDlgBulkImportStart.GetControl(&quot;txtSearchPath&quot;) &apos;oDlgBulkImportStart.getModel().SearchPath.Text
	sDirectory = SearchPath.text

&apos;Select output directory
   
  oFilePicker = CreateUnoService( &quot;com.sun.star.ui.dialogs.FolderPicker&quot; )
	      sFilePickerArgs = com.sun.star.ui.dialogs.TemplateDescription.FILEOPEN_SIMPLE

   With oFilePicker
           .setTitle( &quot;Select directory&quot; )
           .setDisplayDirectory(converttoURL(sDirectory))                      
   End With

&apos; If the search path is selected update the dialogue box field
   If oFilePicker.execute() Then
      SearchPath.text = ConvertFromURL(oFilePicker.getDirectory())
      else
	exit Function
  End If
	oFilePicker.Dispose()

End Function

Function OnClickWizardContinue
&apos; When the user clicks &apos;Continue&apos;, pull the values from the dialogue and mangle them into the search function

Dim sDirectory As String
Dim sFileTypes As String
Dim sExclude As String

  If (Not GlobalScope.DialogLibraries.isLibraryLoaded(&quot;ooosvn&quot;)) Then
    GlobalScope.DialogLibraries.LoadLibrary(&quot;ooosvn&quot;)
  End If
LoadTools

	SearchPath = oDlgBulkImportStart.GetControl(&quot;txtSearchPath&quot;) &apos;oDlgBulkImportStart.getModel().SearchPath.Text
	sDirectory = SearchPath.text

&apos; Generate string of filetypes	
TickODT = oDlgBulkImportStart.GetControl(&quot;TickODT&quot;)
TickODS = oDlgBulkImportStart.GetControl(&quot;TickODS&quot;)
TickODP = oDlgBulkImportStart.GetControl(&quot;TickODP&quot;)
TickODG = oDlgBulkImportStart.GetControl(&quot;TickODG&quot;)
TickODB = oDlgBulkImportStart.GetControl(&quot;TickODB&quot;)
TickODF = oDlgBulkImportStart.GetControl(&quot;TickODF&quot;)
	
sFiletypes =&quot;&quot;
If TickODT.state = 1 Then
	sFileTypes = sFiletypes &amp; &quot;t&quot;
End If

If TickODS.state = 1 Then
	sFileTypes = sFiletypes &amp; &quot;s&quot;
End If

If TickODP.state = 1 Then
	sFileTypes = sFiletypes &amp; &quot;p&quot;
End If

If TickODG.state = 1 Then
	sFileTypes = sFiletypes &amp; &quot;g&quot;
End If

If TickODB.state = 1 Then
	sFileTypes = sFiletypes &amp; &quot;b&quot;
End If

If TickODF.state = 1 Then
	sFileTypes = sFiletypes &amp; &quot;f&quot;
End If

If sFiletypes = &quot;&quot; Then
	Msgbox(&quot;You must select at least one file type to continue.&quot;, 16, &quot;Error&quot;)
	exit function
end if

&apos; Generate string of Exclusions
TickSubdirectories = oDlgBulkImportStart.GetControl(&quot;TickSubdirectories&quot;)
TickHidden = oDlgBulkImportStart.GetControl(&quot;TickHidden&quot;)

sExclude =&quot;&quot;
If TickSubdirectories.state = 1 Then
	sExclude = sExclude &amp; &quot;s&quot;
End If

If TickHidden.state = 1 Then
	sExclude = sExclude &amp; &quot;h&quot;
End If

&apos;Close the dialogue
	oDlgBulkImportStart.endExecute

&apos; Parse paramaters to the search function
ListFiles(sDirectory, sFileTypes, sExclude)

End Function

Function OnClickWizardCancel
&apos; When the user clicks &apos;Cancel&apos;, close the dialogue and stop
	oDlgBulkImportStart.endExecute
End Function

Function ListFiles (sDirectory As String, sFileTypes As String, sExclude As String)
&apos; Function to invoke the bulklist.sh script

dim document   as object
Dim oDoc
Dim sDocURL
oDoc = ThisComponent

  If (Not GlobalScope.DialogLibraries.isLibraryLoaded(&quot;ooosvn&quot;)) Then
    GlobalScope.DialogLibraries.LoadLibrary(&quot;ooosvn&quot;)
  End If
LoadTools

WorkingDir = getWorkingDir

&apos;msgbox sDirectory

cQuote = Chr( 34 )

&apos;  Status Bar Message
   oDocCtrl = oDoc.getCurrentController()
   oDocFrame = oDocCtrl.getFrame()

   oStatus = oDocFrame.createStatusIndicator()
   
   oStatus.start( &quot;Searching &quot; &amp; sDirectory &amp; &quot; for OpenDocument files.  Please wait....&quot;, 10 )
   
	oStatus.value=1

command = &quot;sh &quot; &amp; WorkingDir &amp; &quot;/bulklist.sh &apos;&quot; &amp; sDirectory &amp; &quot;&apos; &quot; &amp; WorkingDir &amp; &quot; &quot; &amp; sFileTypes &amp; &quot; &quot; &amp; sExclude &amp; &quot; &gt; &quot; &amp; WorkingDir &amp; &quot;/operationlog.txt&quot;

&apos;msgbox( &quot;bash -c &quot; + cQuote + command + cQuote)
Shell( &quot;bash -c &quot; + cQuote + command + cQuote, &quot;&quot;,6,true)

	oStatus.value=9

  oStatus.end()

ImportListDlg

End Function

Function ImportListDlg
&apos; Function for loading the help dialogue.

  If (Not GlobalScope.DialogLibraries.isLibraryLoaded(&quot;ooosvn&quot;)) Then
    GlobalScope.DialogLibraries.LoadLibrary(&quot;ooosvn&quot;)
  End If
LoadTools

Dim FileList As Object
Dim sMsg As String

    WorkingDir = getWorkingDir

	oDlgBulkImport = _
		CreateUnoDialog(DialogLibraries.ooosvn.DlgBulkImport)
	
	With oDlgBulkImport
		FileList = .getControl(&quot;txtListing&quot;)
	End With

	iNumber = Freefile
	aFile = WorkingDir &amp; &quot;/bulklist2.txt&quot;
	
	if FileExists(aFile) then
	
		filecount=0
		Open aFile For Input As iNumber
		While not eof(iNumber)
		Line Input #iNumber, sLine
			If sLine &lt;&gt;&quot;&quot; then
				sMsg = sMsg &amp; sLine &amp; chr(13)
				filecount=filecount+1
			end if
		wend
		Close #iNumber

	else
		Msgbox(&quot;No files found to import.&quot;, 16, &quot;Error&quot;)
		exit function
	end if

	FileList.Text = sMsg
	oDlgBulkImport.Title = &quot;Bulk Import file listing: &quot; &amp; filecount &amp; &quot; files&quot;
	oDlgBulkImport.execute
	
End Function

Function CloseDlgBulkImport
&apos; Function to close the bulk import window

oDlgBulkImport.endExecute
BulkImport

End Function

Function BulkImport
&apos;Function to pull names from bulklist2.txt and parse them to the import function

Dim sLine as String
Dim sFilename as String
dim document   as object
Dim oDoc
Dim sDocURL
oDoc = ThisComponent

    If (Not GlobalScope.DialogLibraries.isLibraryLoaded(&quot;ooosvn&quot;)) Then
    GlobalScope.DialogLibraries.LoadLibrary(&quot;ooosvn&quot;)
  End If

LoadTools

      WorkingDir = getWorkingDir

&apos; Line number count
	iNumber = Freefile
	aFile = WorkingDir &amp; &quot;/bulklist2.txt&quot;
	TotalFiles=0
	Open aFile For Input As iNumber
	While not eof(iNumber)
	Line Input #iNumber, sLine
	If sLine &lt;&gt;&quot;&quot; then
		TotalFiles=TotalFiles+1
	end if
	wend
	Close #iNumber

&apos; start status bar
   oDocCtrl = oDoc.getCurrentController()
   oDocFrame = oDocCtrl.getFrame()

   oStatus = oDocFrame.createStatusIndicator()
   
   &apos; Start the timer
   StartTime = Timer
   
   oStatus.start( &quot;Importing &quot; &amp; TotalFiles &amp; &quot; OpenDocument files.  Please wait....&quot;, TotalFiles )

	iNumber = Freefile
	aFile = WorkingDir &amp; &quot;/bulklist2.txt&quot;
	filecount=0
	failcount=0
	Open aFile For Input As iNumber
	While not eof(iNumber)
	Line Input #iNumber, sLine
	If sLine &lt;&gt;&quot;&quot; then
		filecount=filecount+1
		oStatus.value=filecount
		failcount=failcount+UnitImport.UnitImport(sLine)	
	end if
	wend
	Close #iNumber

	&apos; End status bar and timer
  oStatus.end()
  EndTime = Timer
  
  &apos; Work out the elapsed time
  ElapsedTime= CStr((EndTime-StartTime))

&apos; Load the end confirmation screen
oDlgBulkImportEnd = _
		CreateUnoDialog(DialogLibraries.ooosvn.DlgBulkImportEnd)
	
&apos; Get access to labels in the dialogue

With oDlgBulkImportEnd
		FileNumber = .getControl(&quot;FileNumber&quot;)
		SuccessNumber = .getControl(&quot;SuccessNumber&quot;)
		FailNumber = .getControl(&quot;FailNumber&quot;)
		SecondsNumber = .getControl(&quot;SecondsNumber&quot;)
	End With
	
	&apos; Set values of labels in the dialogue to display statistics
	FileNumber.Text = FileCount
	SuccessNumber.Text = FileCount-FailCount
	FailNumber.Text = FailCount
	SecondsNumber.Text = ElapsedTime
	
	oDlgBulkImportEnd.execute

End Function

Function OnClickLogBulkImportEnd
&apos; Function to close the bulk import window and show the log

    If (Not GlobalScope.DialogLibraries.isLibraryLoaded(&quot;ooosvn&quot;)) Then
    GlobalScope.DialogLibraries.LoadLibrary(&quot;ooosvn&quot;)
  End If
LoadTools
oDlgBulkImportEnd.endExecute
OperationLog(&quot;Bulk import wizard log... &quot;)
End Function

Function OnClickCloseBulkImportEnd
&apos; Function to close the bulk import window
    If (Not GlobalScope.DialogLibraries.isLibraryLoaded(&quot;ooosvn&quot;)) Then
    GlobalScope.DialogLibraries.LoadLibrary(&quot;ooosvn&quot;)
  End If
LoadTools
oDlgBulkImportEnd.endExecute
End Function



</script:module>