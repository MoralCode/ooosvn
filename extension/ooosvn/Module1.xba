<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="Module1" script:language="StarBasic">Sub ImportSVN()
&apos; Subroutine for file import into SVN.

ImportSVN = 1

dim document   as object
dim dispatcher as object
dim docuUUID as string
dim parentUUID as string

FirstRunCheck &apos;Check scripts are installed, if not, install them.

document   = ThisComponent.CurrentController.Frame
dispatcher = createUnoService(&quot;com.sun.star.frame.DispatchHelper&quot;)

  Dim oDoc
  Dim sDocURL
  oDoc = ThisComponent

LoadTools

          
        If (oDoc.hasLocation()) Then
          sDocURL = oDoc.getURL()
                else      
                      MsgBox(&quot;File has not been saved so can not be placed under version control.  Save the file to disk before reattempting.&quot;, 16, &quot;File not imported&quot;)
                exit sub
        End If
    
    
    sDocURL2 = mid(sDocURL, 8)
    repo = getRepo

&apos;no longer needed due to firstruncheck?
	If NOT FileExists(repo &amp; &quot;/README.txt&quot;) then
                msgbox (&quot;Repository not found. Create it using:&quot; &amp; chr(13) &amp; &quot;svnadmin create --fs-type fsfs &quot; &amp; mid(repo, 8) &amp; chr(13) &amp; &quot;Then all scripts should be placed in &quot; &amp; WorkingDir, 16, &quot;Repository Error&quot;)
            exit sub
          end if


    WorkingDir = getWorkingDir
    
    &apos; Test for wrong file type
if validatefiletype(sDocURL)=&quot;false&quot; then
ImportSVN = 0
	exit sub
end if

&apos; Test to see if file of same name is already under change control
If FileExists(WorkingDir &amp; &quot;/&quot; &amp; FileNameoutofPath(sDocURL, &quot;/&quot;) &amp; &quot;/&quot;) Then
MsgBox( &quot;A file named &quot; &amp; FileNameoutofPath(sDocURL, &quot;/&quot;) &amp; &quot; is already under version control.  Please save as a different file name before reattempting.&quot;, 16, &quot;File not imported&quot;)
ImportSVN = 0
Exit Sub
End If

&apos; Start of docuUUID processing

&apos; try to read Document-UUID from document
docuUUID = GetDocumentUUID

If docuUUID &lt;&gt; &quot;&quot; Then

If FileExists(WorkingDir &amp; &quot;/&quot; &amp; docuUUID &amp; &quot;/.svn/&quot;) Then

&apos; Document already has been imported, what shall we do?
&apos; Import as new file, Import as child (make docuUUID parentUUID) or cancel
&apos; Window required.  Need to pass docuUUID and parentUUID to shell script

&apos;StoredURL = getstoredURL &apos; Not used right now, maybe never.

&apos; test to see if this exact file is already under version control, if so, exit.
&apos;If StoredURL = sDocURL then
&apos;MsgBox( &quot;A file named &quot; &amp; FileNameoutofPath(sDocURL, &quot;/&quot;) &amp; &quot; is already under version control.  Please save as a different file name before reattempting.&quot;, 16, &quot;File not imported&quot;)
&apos;Exit Sub
&apos;End If

ImportType = Msgbox (&quot;A document with the same UUID (&quot; &amp; docuUUID &amp; &quot;) appears to already be under version control.&quot; &amp; chr(10) &amp;_
		&quot;Would you like to import the file as a child of &quot; &amp; docuUUID &amp; &quot;?&quot; &amp; chr(10) &amp;_
		&quot;Click No to Import as a new document or Cancel to end the import process.&quot;, 35, &quot;Import mode requested&quot;)

If ImportType = 6 Then
&apos; If import as child
parentUUID = docuUUID
docuUUID = generateUUID
End If

If ImportType = 7 Then
&apos; If new file
docuUUID = generateUUID
End If

If ImportType = 2 Then
&apos; If cancelled
exit sub
End If

Else
&apos; If file is not in working dir but has a UUID, it may be another users document, need to import it as a child.
parentUUID = docuUUID
docuUUID = generateUUID

End If

Else
&apos; No docu-UUID so the file needs to be imported from scratch with a new docu-UUID
docuUUID = generateUUID
&apos;msgbox(docuUUID) &apos; uncomment to display UUID

End If

&apos;Docu-UUID Uniqueness check, just in case a 128 bit key isn&apos;t long enough
If FileExists(WorkingDir &amp; &quot;/&quot; &amp; docuUUID &amp; &quot;/.svn/&quot;) Then
&apos; generate a new docuUUID if another document has the same one.
docuUUID = generateUUID
End If

&apos; End of docuUUID processing
         
            cQuote = Chr( 34 )

&apos;  Status Bar Message
   oDocCtrl = oDoc.getCurrentController()
   oDocFrame = oDocCtrl.getFrame()

   oStatus = oDocFrame.createStatusIndicator()
   
   oStatus.start( &quot;Importing &quot; &amp; FileNameoutofPath(sDocURL, &quot;/&quot;) &amp; &quot; to &quot; &amp; repo &amp; &quot;.  Please wait....&quot;, 10 )

command = &quot;sh &quot; &amp; WorkingDir &amp; &quot;/import.sh &quot; &amp; &quot;&apos;&quot; &amp; ConvertFromURL(sDocURL) &amp; &quot;&apos; &quot; &amp; FileNameoutofPath(sDocURL, &quot;/&quot;) &amp; &quot; &quot; &amp; repo &amp; &quot; &quot; &amp; WorkingDir &amp; &quot; &quot; &amp; DocuUUID &amp; &quot; &quot; &amp; parentUUID &amp; &quot; &gt; &quot; &amp; WorkingDir &amp; &quot;/operation.log&quot;

   Shell( &quot;bash -c &quot; + cQuote + command + cQuote, &quot;&quot;,6,true)

   &apos;Test for success
   
   If NOT FileExists(WorkingDir &amp; &quot;/&quot; &amp; docuUUID &amp; &quot;/.svn/&quot;) Then
    &apos; Display the log on failure
     OperationLog(&quot;Failed importing file to SVN! Log follows...&quot;)
	exit sub
   end if
   
   &apos;If successful, reload the document
	ThisComponent.setModified(False) &apos;Tell OOo not to check for external file modificiations.  This avoids the &quot;Cancel all changes?&quot; dialogue in OOo 3.
  dispatcher.executeDispatch(document, &quot;.uno:Reload&quot;, &quot;&quot;, 0, Array())
  oStatus.end()
  
end sub
  
Sub CommitSVN()
&apos; Sub for committing changes in a file that&apos;s already under version control.

  Dim oDoc
  Dim sDocURL
  oDoc = ThisComponent

 LoadTools
  If (oDoc.hasLocation()) Then
    sDocURL = oDoc.getURL()
    sDocURL2 = mid(sDocURL, 8)
    repo = getRepo
    WorkingDir = getWorkingDir
    else sDocURL = &quot;[no name]&quot;

  End If
  
  docuUUID = GetDocumentUUID
  
&apos; Test to see if file of same name is already under change control
If NOT FileExists(WorkingDir &amp; &quot;/&quot; &amp; FileNameoutofPath(sDocURL, &quot;/&quot;) &amp; &quot;/.svn/&quot;) Then &apos;Version 0.3
	
		If NOT FileExists(WorkingDir &amp; &quot;/&quot; &amp; docuUUID &amp; &quot;/.svn/&quot;) Then &apos; Version 0.4
			MsgBox( FileNameoutofPath(sDocURL, &quot;/&quot;) &amp; &quot; is not under version control.  Import the file to change control to enable file commits.&quot;, 16, &quot;Commit Error&quot;)
			Exit Sub &apos; File not under version control so stop.
		
			Else docpath = docuUUID

		End If
	
	Else docpath = FileNameoutofPath(sDocURL, &quot;/&quot;)
		
End If
	
	Comment = &quot;Manual-commit&quot;

cQuote = Chr( 34 )

&apos;  Status Bar Message
   oDocCtrl = oDoc.getCurrentController()
   oDocFrame = oDocCtrl.getFrame()
   
   oStatus = oDocFrame.createStatusIndicator()
   
   oStatus.start( &quot;Committing &quot; &amp; FileNameoutofPath(sDocURL, &quot;/&quot;) &amp; &quot; to &quot; &amp; repo &amp; &quot;.  Please wait....&quot;, 10 )

	command =  &quot;sh &quot; &amp; WorkingDir &amp; &quot;/commit.sh &quot; &amp; &quot;&apos;&quot; &amp; ConvertFromURL(sDocURL) &amp; &quot;&apos; &quot; &amp; docpath &amp; &quot; &quot; &amp; repo &amp; &quot; &quot; &amp; WorkingDir &amp; &quot; &quot; &amp; Comment &amp; &quot; &gt; &quot; &amp; WorkingDir &amp; &quot;/operation.log&quot;

	Shell( &quot;bash -c &quot; + cQuote + command + cQuote)  

	&apos;End the status bar
oStatus.end()	
end sub

sub InfoSVN()
&apos; Sub for displaying SVN info of the active document.

  Dim oDoc
  Dim sDocURL
  Dim repo
  oDoc = ThisComponent
  
  FirstRunCheck

LoadTools
  If (oDoc.hasLocation()) Then
	sDocURL = oDoc.getURL()
    sDocURL2 = mid(sDocURL, 8)
    repo = getRepo
    WorkingDir = getWorkingDir
    else sDocURL = &quot;[no name]&quot;
End If

docuUUID = GetDocumentUUID
parentUUID = GetParentUUID

If FileExists(WorkingDir &amp; &quot;/&quot; &amp; docuUUID &amp; &quot;/.svn/&quot;) Then
			documentDir = docuUUID
			
			ElseIf FileExists(WorkingDir &amp; &quot;/&quot; &amp; FileNameoutofPath(sDocURL, &quot;/&quot;) &amp; &quot;/.svn/&quot;) Then
			documentDir = FileNameoutofPath(sDocURL, &quot;/&quot;)
			
			Else
			
			MsgBox( ConvertFromURL(sDocURL) &amp; &quot; is not under version control.  Import the file to change control to enable file commits.&quot;, 16, &quot;Commit Error&quot;)
			Exit Sub
			
		End If

cQuote = Chr( 34 )

&apos;  Status Bar Message
   oDocCtrl = oDoc.getCurrentController()
   oDocFrame = oDocCtrl.getFrame()
   
   oStatus = oDocFrame.createStatusIndicator()
   
   oStatus.start( &quot;Retrieving SVN information for &quot; &amp; FileNameoutofPath(sDocURL, &quot;/&quot;) &amp; &quot;.  Please wait....&quot;, 10 )
	Shell( &quot;bash -c &quot; + cQuote + &quot;cd &quot; &amp; WorkingDir &amp; &quot;/&quot; &amp; documentDir &amp; &quot;/ &amp;&amp; svn info &gt; &quot; &amp; WorkingDir &amp; &quot;/&quot; &amp; documentDir &amp; &quot;/info.txt&quot; + cQuote, &quot;&quot;,6,true)
		
	iNumber = Freefile
	aFile = WorkingDir &amp; &quot;/&quot; &amp; documentDir &amp; &quot;/info.txt&quot;
Open aFile For Input As iNumber

While not eof(iNumber)
Line Input #iNumber, sLine
If sLine &lt;&gt;&quot;&quot; then
sMsg = sMsg &amp; sLine &amp; chr(13)
end if
wend
Close #iNumber

if docuUUID &lt;&gt; &quot;&quot; then
sMsg = sMsg &amp; chr(13) &amp; &quot;Document UUID: &quot; &amp; docuUUID &apos; append a line for docuUUID if it exists
end if

if parentUUID &lt;&gt; &quot;&quot; then
sMsg = sMsg &amp; chr(13) &amp; &quot;Parent Document UUID: &quot; &amp; parentUUID &apos; same for parentUUID
end if

oStatus.end()
Msgbox (sMsg, 64, &quot;SVN info for &quot; &amp; FileNameoutofPath(sDocURL, &quot;/&quot;))

end sub

Sub ThumbnailsSVN()
&apos;Sub for a version browser based upon the Thumbnail.png files in ODF documents

dim document   as object
dim dispatcher as object

FirstRunCheck

document   = ThisComponent.CurrentController.Frame
dispatcher = createUnoService(&quot;com.sun.star.frame.DispatchHelper&quot;)

  Dim oDoc
  Dim sDocURL
  oDoc = ThisComponent

  LoadTools
  
  If (oDoc.hasLocation()) Then
    sDocURL = oDoc.getURL()
    sDocURL2 = mid(sDocURL, 8)
    repo = getRepo
    WorkingDir = getWorkingDir
    else sDocURL = &quot;[no name]&quot;
  End If
  
  &apos; Now test we have an ODF file as sx* files do not have thumbnails
	if validatefiletypeODF(sDocURL)=&quot;false&quot; then
&apos;ImportSVN = 0
	exit sub
end if
  
  docuUUID = GetDocumentUUID

&apos; Test to see if file of same name is already under change control
If NOT FileExists(WorkingDir &amp; &quot;/&quot; &amp; FileNameoutofPath(sDocURL, &quot;/&quot;) &amp; &quot;/.svn/&quot;) Then &apos;Version 0.3
	
		If NOT FileExists(WorkingDir &amp; &quot;/&quot; &amp; docuUUID &amp; &quot;/.svn/&quot;) Then &apos; Version 0.4
			MsgBox( FileNameoutofPath(sDocURL, &quot;/&quot;) &amp; &quot; is not under version control.  Import the file to change control to enable version management.&quot;, 16, &quot;Error&quot;)
			Exit Sub &apos; File not under version control so stop.
		
			Else docpath = docuUUID

		End If
	
	Else docpath = FileNameoutofPath(sDocURL, &quot;/&quot;)
		
End If
         
            cQuote = Chr( 34 )

&apos;  Status Bar Message
   oDocCtrl = oDoc.getCurrentController()
   oDocFrame = oDocCtrl.getFrame()
   
   oStatus = oDocFrame.createStatusIndicator()
   
   oStatus.start( &quot;Retrieving version thumbnails for &quot; &amp; FileNameoutofPath(sDocURL, &quot;/&quot;) &amp; &quot;.  Please wait....&quot;, 10 )

   Shell( &quot;bash -c &quot; + cQuote + &quot;sh &quot; &amp; WorkingDir &amp; &quot;/thumbnails.sh &quot; &amp; docpath &amp; &quot; &quot; &amp; repo &amp; &quot; &quot; &amp; WorkingDir &amp; &quot; &gt; &quot; &amp; WorkingDir &amp; &quot;/operation.log&quot; + cQuote, &quot;&quot;, 6, True)

oStatus.end()

&apos;Doesn&apos;t work just yet.  Intented to test for Thumbnails existing but wildcard doesn&apos;t seem to work.
&apos;If Not FileExists(converttoURL(WorkingDir) &amp; &quot;/&quot; &amp; FileNameoutofPath(sDocURL, &quot;/&quot;) &amp; &quot;/preview/*.png&quot;) Then
&apos;MsgBox(&quot;No thumbnails&quot;)
&apos;End If

   &apos; The dialogue  
   Dim sFileURL as String

&apos; Set the Dialog Arguments to a Template for FILESAVE
   sFilePickerArgs = Array( com.sun.star.ui.dialogs.TemplateDescription.FILEOPEN_LINK_PREVIEW_IMAGE_TEMPLATE) &apos;FILESAVE_AUTOEXTENSION )

&apos; register the Service for Filepicker   
   oFilePicker = CreateUnoService( &quot;com.sun.star.ui.dialogs.FilePicker&quot; )

&apos; Pass some arguments to it
   With oFilePicker
           .Initialize( sFilePickerArgs() )
           .setDisplayDirectory( converttoURL(WorkingDir) &amp; &quot;/&quot; &amp; docpath &amp; &quot;/preview/&quot; )
           .setTitle( &quot;Select version to revert to &quot; )
           .appendFilter(&quot;Document Thumbnails&quot;, &quot;*.png&quot; ) 
           
   End With

&apos; If the savepath is selected return the complete path and display it in an messagebox   
   If oFilePicker.execute() Then
      sFiles = oFilePicker.getFiles()
      sFileURL = sFiles(0)
      version = FileNameoutofPath(sFileURL, &quot;/&quot;)
      sCut = Right ( version, 5 )
      version = Left ( version, InStr( 1, version, sCut ) )
      else
	exit sub

  End If

&apos; Close the Dialog
   oFilePicker.Dispose()

&apos;  Status Bar Message
   oDocCtrl = oDoc.getCurrentController()
   oDocFrame = oDocCtrl.getFrame()
   
   oStatus = oDocFrame.createStatusIndicator()
   
   oStatus.start( &quot;Reverting &quot; &amp; FileNameoutofPath(sDocURL, &quot;/&quot;) &amp; &quot; to version &quot; &amp; version &amp; &quot;.  Please wait....&quot;, 10 )

	Shell( &quot;bash -c &quot; + cQuote + &quot;sh &quot; &amp; WorkingDir &amp; &quot;/revert.sh &apos;&quot; &amp; ConvertFromURL(sDocURL) &amp; &quot;&apos; &quot; &amp; docpath &amp; &quot; &quot; &amp; repo &amp; &quot; &quot; &amp; WorkingDir &amp; &quot; &quot; &amp; version &amp; &quot; &gt;&gt; &quot; &amp; WorkingDir &amp; &quot;/operation.log&quot; + cQuote, &quot;&quot;,6,true)
	
	&apos; Reload
	ThisComponent.setModified(False) &apos;Tell OOo not to check for external file modificiations.  This avoids the &quot;Cancel all changes?&quot; dialogue in OOo 3.
	dispatcher.executeDispatch(document, &quot;.uno:Reload&quot;, &quot;&quot;, 0, Array())
oStatus.end()
   
End sub

Sub RevertSVN()
&apos; Sub to reload a previous version of a document.  Just like the Thumbnail.svn module but non-graphical

rem ----------------------------------------------------------------------
rem define variables
dim document   as object
dim dispatcher as object
rem ----------------------------------------------------------------------
rem get access to the document

FirstRunCheck

document   = ThisComponent.CurrentController.Frame
dispatcher = createUnoService(&quot;com.sun.star.frame.DispatchHelper&quot;)

  Dim oDoc
  Dim sDocURL
  oDoc = ThisComponent

  LoadTools
  If (oDoc.hasLocation()) Then
    sDocURL = oDoc.getURL()
    sDocURL2 = mid(sDocURL, 8)
    repo = getRepo
    WorkingDir = getWorkingDir
    else sDocURL = &quot;[no name]&quot;
  End If
  
  docuUUID = getDocumentUUID
  
  &apos; Test to see if file of same name is already under change control
If NOT FileExists(WorkingDir &amp; &quot;/&quot; &amp; FileNameoutofPath(sDocURL, &quot;/&quot;) &amp; &quot;/.svn/&quot;) Then &apos;Version 0.3
	
		If NOT FileExists(WorkingDir &amp; &quot;/&quot; &amp; docuUUID &amp; &quot;/.svn/&quot;) Then &apos; Version 0.4
			MsgBox( FileNameoutofPath(sDocURL, &quot;/&quot;) &amp; &quot; is not under version control.  Import the file to change control to enable version management.&quot;, 16, &quot;Error&quot;)
			Exit Sub &apos; File not under version control so stop.
		
			Else docpath = docuUUID

		End If
	
	Else docpath = FileNameoutofPath(sDocURL, &quot;/&quot;)
		
End If
         
            cQuote = Chr( 34 )
&apos;  Status Bar Message
   oDocCtrl = oDoc.getCurrentController()
   oDocFrame = oDocCtrl.getFrame()
   
   oStatus = oDocFrame.createStatusIndicator()
   
   oStatus.start( &quot;Listing versions for &quot; &amp; FileNameoutofPath(sDocURL, &quot;/&quot;) &amp; &quot;.  Please wait....&quot;, 10 )
   Shell( &quot;bash -c &quot; + cQuote + &quot;sh &quot; &amp; WorkingDir &amp; &quot;/listversions.sh &quot; &amp; docpath &amp; &quot; &quot; &amp; repo &amp; &quot; &quot; &amp; WorkingDir &amp; &quot; &gt; &quot; &amp; WorkingDir &amp; &quot;/operation.log&quot; + cQuote, &quot;&quot;,6,true)
oStatus.end()
   &apos; The dialogue
   
   &apos; If no versions directory exists, there must be a problem.
If Not FileExists (converttoURL(WorkingDir) &amp; &quot;/&quot; &amp; docpath &amp; &quot;/versions/&quot;) Then
Msgbox(&quot;Version files do not exist in the repository.  Operation cancelled.&quot;)
Exit Sub
End If
   
   Dim sFileURL as String

&apos; Set the Dialog Arguments to a Template for FILESAVE

   sFilePickerArgs = Array( com.sun.star.ui.dialogs.TemplateDescription.FILEOPEN_SIMPLE)

&apos; register the Service for Filepicker
   
   oFilePicker = CreateUnoService( &quot;com.sun.star.ui.dialogs.FilePicker&quot; )

&apos; Pass some arguments to it

   With oFilePicker
           .Initialize( sFilePickerArgs() )
           .setDisplayDirectory( converttoURL(WorkingDir) &amp; &quot;/&quot; &amp; docpath &amp; &quot;/versions/&quot; )
           .setTitle( &quot;Select version of &quot; &amp; FileNameoutofPath(sDocURL, &quot;/&quot;) &amp; &quot; to revert to &quot; )
           .appendFilter(&quot;Document versions&quot;, &quot;*.version&quot; ) 
           
   End With

&apos; If the savepath is selected return the complete path and display it in an messagebox   

   If oFilePicker.execute() Then
      sFiles = oFilePicker.getFiles()
      sFileURL = sFiles(0)
      version = FileNameoutofPath(sFileURL, &quot;/&quot;)
      sCut = Right ( version, 9 )
      version = Left ( version, InStr( 1, version, sCut ) )
      else
	exit sub
&apos;      MsgBox ( version )

  End If

&apos; Close the Dialog
   oFilePicker.Dispose() 

&apos;  Status Bar Message
   oDocCtrl = oDoc.getCurrentController()
   oDocFrame = oDocCtrl.getFrame()
   
   oStatus = oDocFrame.createStatusIndicator()
   
   oStatus.start( &quot;Reverting &quot; &amp; FileNameoutofPath(sDocURL, &quot;/&quot;) &amp; &quot; to version &quot; &amp; version &amp; &quot;.  Please wait....&quot;, 10 )

	Shell( &quot;bash -c &quot; + cQuote + &quot;sh &quot; &amp; WorkingDir &amp; &quot;/revert.sh &apos;&quot; &amp; ConvertFromURL(sDocURL) &amp; &quot;&apos; &quot; &amp; docpath &amp; &quot; &quot; &amp; repo &amp; &quot; &quot; &amp; WorkingDir &amp; &quot; &quot; &amp; version &amp; &quot; &gt;&gt; &quot; &amp; WorkingDir &amp; &quot;/operation.log&quot; + cQuote, &quot;&quot;,6,true)
	
	&apos; Reload
	ThisComponent.setModified(False) &apos;Tell OOo not to check for external file modificiations.  This avoids the &quot;Cancel all changes?&quot; dialogue in OOo 3.
	dispatcher.executeDispatch(document, &quot;.uno:Reload&quot;, &quot;&quot;, 0, Array())
	oStatus.end()
   
End sub

Sub RecoverSVN()
&apos; Sub for reloading any version of any file under version control.

  Dim oDoc
  Dim sDocURL
  oDoc = ThisComponent
  LoadTools

FirstRunCheck

    repo = getRepo
    WorkingDir = getWorkingDir  
         
            cQuote = Chr( 34 )
&apos;  Status Bar Message
   oDocCtrl = oDoc.getCurrentController()
   oDocFrame = oDocCtrl.getFrame()
   
   oStatus = oDocFrame.createStatusIndicator()
   
   oStatus.start( &quot;Listing documents in working directory.  Please wait....&quot;, 10 )

	&apos; Get document list
   Shell( &quot;bash -c &quot; + cQuote + &quot;sh &quot; &amp; WorkingDir &amp; &quot;/listdocuments.sh &quot; &amp; WorkingDir &amp; &quot; &gt; &quot; &amp; WorkingDir &amp; &quot;/operation.log&quot; + cQuote, &quot;&quot;,6,true)

oStatus.end()

   &apos; The Document list dialogue
   
   Dim sFileURL as String

&apos; Set the Dialog Arguments to a Template for FILESAVE

   sFilePickerArgs = Array( com.sun.star.ui.dialogs.TemplateDescription.FILEOPEN_SIMPLE)

&apos; register the Service for Filepicker
   
   oFilePicker = CreateUnoService( &quot;com.sun.star.ui.dialogs.FilePicker&quot; )

&apos; Pass some arguments to it

   With oFilePicker
           .Initialize( sFilePickerArgs() )
           .setDisplayDirectory( converttoURL(WorkingDir) &amp; &quot;/documentlist/&quot;)
           .setTitle( &quot;Step 1/4: Select Document to recover&quot; )
           .appendFilter(&quot;All files&quot;, &quot;*.*&quot; ) 
           
   End With

&apos; If the savepath is selected return the complete path and display it in an messagebox   

   If oFilePicker.execute() Then
      sFiles = oFilePicker.getFiles()
      sFileURL = sFiles(0)
      documentname = FileNameoutofPath(sFileURL, &quot;/&quot;)
      else
	exit sub

  End If

&apos; Close the Dialog
   oFilePicker.Dispose()
&apos;  Status Bar Message
   oDocCtrl = oDoc.getCurrentController()
   oDocFrame = oDocCtrl.getFrame()
   
   oStatus = oDocFrame.createStatusIndicator()
   
   oStatus.start( &quot;Listing versions for &quot; &amp; documentname &amp; &quot; in repository &quot; &amp; repo &amp; &quot;.  Please wait....&quot;, 10 )
	&apos; Get version list
   Shell( &quot;bash -c &quot; + cQuote + &quot;sh &quot; &amp; WorkingDir &amp; &quot;/listversions.sh &quot;  &amp; documentname &amp; &quot; &quot; &amp; repo &amp; &quot; &quot; &amp; WorkingDir &amp; &quot; &gt;&gt; &quot; &amp; WorkingDir &amp; &quot;/operation.log&quot; + cQuote, &quot;&quot;,6,true)
oStatus.end()

&apos; If no versions directory exists, there must be a problem.
If Not FileExists (converttoURL(WorkingDir) &amp; &quot;/&quot; &amp; documentname &amp; &quot;/versions/&quot;) Then
Msgbox(&quot;Version files do not exist in the repository.  Operation cancelled.&quot;)
Exit Sub
End If

   &apos; The version dialogue

&apos; Set the Dialog Arguments to a Template for FILEOPEN

   sFilePickerArgs = Array( com.sun.star.ui.dialogs.TemplateDescription.FILEOPEN_SIMPLE)

&apos; register the Service for Filepicker
   
   oFilePicker = CreateUnoService( &quot;com.sun.star.ui.dialogs.FilePicker&quot; )

&apos; Pass some arguments to it

   With oFilePicker
           .Initialize( sFilePickerArgs() )
           .setDisplayDirectory( converttoURL(WorkingDir) &amp; &quot;/&quot; &amp; documentname &amp; &quot;/versions/&quot; )
           .setTitle( &quot;Step 2/4: Select version of &quot; &amp; documentname &amp; &quot; to revert to &quot; )
           .appendFilter(&quot;Document versions&quot;, &quot;*.version&quot; ) 
           
   End With

&apos; If the savepath is selected return the complete path and display it in an messagebox   

   If oFilePicker.execute() Then
      sFiles = oFilePicker.getFiles()
      sFileURL = sFiles(0)
      version = FileNameoutofPath(sFileURL, &quot;/&quot;)
      sCut = Right ( version, 9 )
      version = Left ( version, InStr( 1, version, sCut ) )
      else
	exit sub
  End If

&apos; Close the Dialog
   oFilePicker.Dispose()
   
&apos;Select output directory
   
  oFilePicker = CreateUnoService( &quot;com.sun.star.ui.dialogs.FolderPicker&quot; )
	      sFilePickerArgs = com.sun.star.ui.dialogs.TemplateDescription.FILEOPEN_SIMPLE

&apos; Pass some arguments to it
   With oFilePicker
           &apos;.Initialize( sFilePickerArgs() )
           .setTitle( &quot;Step 3/4: Select directory to save version &quot; &amp; version &amp; &quot; of &quot; &amp; documentname &amp; &quot; in&quot; )
          &apos; .Execute( sFilePickerArgs() )
                      
   End With

&apos; If the savepath is selected return the complete path and display it in an messagebox   

   If oFilePicker.execute() Then
      sFiles = oFilePicker.getDirectory()
      else
	exit sub
  End If
  
dim newfilename  

newFileName = InputBox(ConvertFromURL(sFiles) &amp; &quot;/&quot;, &quot;Step 4/4: Enter filename for recovered file:&quot;, documentname)

if newFileName =&quot;&quot; then
exit sub &apos; exit if cancelled
end if
      outputURL = ConvertFromURL(sFiles) &amp; &quot;/&quot; &amp; newFileName

   &apos;  Status Bar Message
   oDocCtrl = oDoc.getCurrentController()
   oDocFrame = oDocCtrl.getFrame()
   
   oStatus = oDocFrame.createStatusIndicator()
   
   oStatus.start( &quot;Recovering &quot; &amp; documentname &amp; &quot;, version &quot; &amp; version &amp; &quot; to &quot; &amp; outputURL &amp; &quot;.  Please wait....&quot;, 10 )
   &apos;Output
	Shell( &quot;bash -c &quot; + cQuote + &quot;sh &quot; &amp; WorkingDir &amp; &quot;/revert.sh &apos;&quot; &amp; outputURL &amp; &quot;&apos; &quot; &amp; documentname &amp; &quot; &quot; &amp; repo &amp; &quot; &quot; &amp; WorkingDir &amp; &quot; &quot; &amp; version &amp; &quot; &gt;&gt; &quot; &amp; WorkingDir &amp; &quot;/operation.log&quot; + cQuote, &quot;&quot;,6,true)

	outputfile = ConvertToURL(outputURL)

&apos; Load the recovered file
If FileExists(outputfile) then
	StarDesktop.loadComponentfromURL(outputfile,&quot;_blank&quot;, 0, Array())
	oStatus.end()
   		else
   		oStatus.end()
   		
   		&apos;Error Log window
   	OperationLog(&quot;Failed to recover document! Log follows...&quot;)
end if
End sub

sub DiffSVN() 
&apos; Function to allow graphical comparison between two versions of a document

dim document   as object
dim dispatcher as object

FirstRunCheck

rem get access to the document
document   = ThisComponent.CurrentController.Frame
dispatcher = createUnoService(&quot;com.sun.star.frame.DispatchHelper&quot;)

  Dim oDoc
  Dim sDocURL
  oDoc = ThisComponent
  LoadTools
  If (oDoc.hasLocation()) Then
    sDocURL = oDoc.getURL()
    sDocURL2 = mid(sDocURL, 8)
    repo = getRepo
    WorkingDir = getWorkingDir
    else sDocURL = &quot;[no name]&quot;
  End If
  
  docuUUID = GetDocumentUUID
  
&apos; Test to see if file of same name is already under change control
If NOT FileExists(WorkingDir &amp; &quot;/&quot; &amp; FileNameoutofPath(sDocURL, &quot;/&quot;) &amp; &quot;/.svn/&quot;) Then &apos;Version 0.3
	
		If NOT FileExists(WorkingDir &amp; &quot;/&quot; &amp; docuUUID &amp; &quot;/.svn/&quot;) Then &apos; Version 0.4
		MsgBox( FileNameoutofPath(sDocURL, &quot;/&quot;) &amp; &quot; is not under version control.  Import the file to change control to enable version management.&quot;, 16, &quot;Error&quot;)		
			Exit Sub &apos; File not under version control so stop.
		
			Else docpath = docuUUID

		End If
	
	Else docpath = FileNameoutofPath(sDocURL, &quot;/&quot;)
		
End If
         
            cQuote = Chr( 34 )
&apos;  Status Bar Message
   oDocCtrl = oDoc.getCurrentController()
   oDocFrame = oDocCtrl.getFrame()
   
   oStatus = oDocFrame.createStatusIndicator()
   
   oStatus.start( &quot;Listing versions for &quot; &amp; FileNameoutofPath(sDocURL, &quot;/&quot;) &amp; &quot; in repository &quot; &amp; repo &amp; &quot;.  Please wait....&quot;, 10 )
   
   Shell( &quot;bash -c &quot; + cQuote + &quot;sh &quot; &amp; WorkingDir &amp; &quot;/listversions.sh &quot; &amp; &quot; &quot; &amp; docpath &amp; &quot; &quot; &amp; repo &amp; &quot; &quot; &amp; WorkingDir &amp; &quot; &gt; &quot; &amp; WorkingDir &amp; &quot;/operation.log&quot; + cQuote, &quot;&quot;,6,true)

oStatus.end()
   &apos; The dialogue
   
   Dim sFileURL as String

&apos; Set the Dialog Arguments to a Template for FILEOPEN

   sFilePickerArgs = Array( com.sun.star.ui.dialogs.TemplateDescription.FILEOPEN_SIMPLE)

&apos; register the Service for Filepicker
   
   oFilePicker = CreateUnoService( &quot;com.sun.star.ui.dialogs.FilePicker&quot; )

&apos; Pass some arguments to it

   With oFilePicker
           .Initialize( sFilePickerArgs() )
&apos;           .setDisplayDirectory( converttoURL(WorkingDir) &amp; &quot;/&quot; &amp; FileNameoutofPath(sDocURL, &quot;/&quot;) &amp; &quot;/versions/&quot; )
		   .setDisplayDirectory( converttoURL(WorkingDir) &amp; &quot;/&quot; &amp; docpath &amp; &quot;/versions/&quot; )
           .setTitle( &quot;Select version of &quot; &amp; FileNameoutofPath(sDocURL, &quot;/&quot;) &amp; &quot; to compare with active version &quot; )
           .appendFilter(&quot;Document versions&quot;, &quot;*.version&quot; ) 
           
   End With

&apos; If the savepath is selected return the complete path and display it in an messagebox   

   If oFilePicker.execute() Then
      sFiles = oFilePicker.getFiles()
      sFileURL = sFiles(0)
      version = FileNameoutofPath(sFileURL, &quot;/&quot;)
      sCut = Right ( version, 9 )
      version = Left ( version, InStr( 1, version, sCut ) )
&apos;      OutputURL = WorkingDir &amp; &quot;/&quot; &amp; FileNameoutofPath(sDocURL, &quot;/&quot;) &amp; &quot;/tempdiff.zip&quot;
      OutputURL = WorkingDir &amp; &quot;/&quot; &amp; docpath &amp; &quot;/tempdiff.zip&quot;
      else
	exit sub

  End If

&apos; Close the Dialog
   oFilePicker.Dispose() 
   
   &apos;  Status Bar Message
   oDocCtrl = oDoc.getCurrentController()
   oDocFrame = oDocCtrl.getFrame()
   
   oStatus = oDocFrame.createStatusIndicator()
   
   oStatus.start( &quot;Comparing latest version of &quot; &amp; FileNameoutofPath(sDocURL, &quot;/&quot;) &amp; &quot; with version &quot; &amp; version &amp; &quot;.  Please wait....&quot;, 10 )
   
	Shell( &quot;bash -c &quot; + cQuote + &quot;sh &quot; &amp; WorkingDir &amp; &quot;/revert.sh &quot; &amp; OutputURL &amp; &quot; &quot; &amp; docpath &amp; &quot; &quot; &amp; repo &amp; &quot; &quot; &amp; WorkingDir &amp; &quot; &quot; &amp; version &amp; &quot; &gt;&gt; &quot; &amp; WorkingDir &amp; &quot;/operation.log&quot; + cQuote, &quot;&quot;,6,true)

&apos;	Compare documents
	dim xFrame   as object
	dim xDispatchHelper as object

	xFrame   = ThisComponent.CurrentController.Frame
	xDispatchHelper = createUnoService(&quot;com.sun.star.frame.DispatchHelper&quot;)

	dim args(0) as new com.sun.star.beans.PropertyValue
	args(0).Name = &quot;URL&quot;
	args(0).Value = ConvertToURL(OutputURL)
	xDispatchHelper.executeDispatch(xFrame, &quot;.uno:CompareDocuments&quot;, &quot;&quot;, 0, args())
	
	oStatus.end()
   
end sub

Sub LogSVN()
&apos;Generate a log file and display it on screen.  Limited to 65536 characters due to string length limitation.

Dim oDlgLog As Object
Dim txtLog As Object
Dim sMsg As String

FirstRunCheck

	Dim oDoc
  Dim sDocURL
  Dim repo
  oDoc = ThisComponent
  LoadTools
    If (Not GlobalScope.DialogLibraries.isLibraryLoaded(&quot;ooosvn&quot;)) Then
    GlobalScope.DialogLibraries.LoadLibrary(&quot;ooosvn&quot;)
  End If
  If (oDoc.hasLocation()) Then
	sDocURL = oDoc.getURL()
    sDocURL2 = mid(sDocURL, 8)
    repo = getRepo
    WorkingDir = getWorkingDir
    else sDocURL = &quot;[no name]&quot;
End If

	oDlgLog = _
		CreateUnoDialog(DialogLibraries.ooosvn.DlgLog)
	
	With oDlgLog
		txtLog = .getControl(&quot;txtAbout&quot;)
	End With
	
	docuUUID = GetDocumentUUID
	
&apos; Test to see if file of same name is already under change control
	If NOT FileExists(WorkingDir &amp; &quot;/&quot; &amp; FileNameoutofPath(sDocURL, &quot;/&quot;) &amp; &quot;/.svn/&quot;) Then &apos;Version 0.3
	
		If NOT FileExists(WorkingDir &amp; &quot;/&quot; &amp; docuUUID &amp; &quot;/.svn/&quot;) Then &apos; Version 0.4
			MsgBox( FileNameoutofPath(sDocURL, &quot;/&quot;) &amp; &quot; is not under version control.  Import the file to change control to enable version management.&quot;, 16, &quot;Error&quot;)
			Exit Sub
		
			Else docpath = docuUUID

		End If
	
		Else docpath = FileNameoutofPath(sDocURL, &quot;/&quot;)
		
	End If

cQuote = Chr( 34 )
&apos;  Status Bar Message
   oDocCtrl = oDoc.getCurrentController()
   oDocFrame = oDocCtrl.getFrame()
   
   oStatus = oDocFrame.createStatusIndicator()
   
   oStatus.start( &quot;Loading log for &quot; &amp; FileNameoutofPath(sDocURL, &quot;/&quot;) &amp; &quot;.  Please wait....&quot;, 10 )

	Shell( &quot;bash -c &quot; + cQuote + &quot;cd &quot; &amp; WorkingDir &amp; &quot;/&quot; &amp; docpath &amp; &quot;/ &amp;&amp; svn log -v &gt; log.txt&quot; + cQuote, &quot;&quot;,6,true)
	
	iNumber = Freefile
	aFile = WorkingDir &amp; &quot;/&quot; &amp; docpath &amp; &quot;/log.txt&quot;
Open aFile For Input As iNumber
While not eof(iNumber)
Line Input #iNumber, sLine
If sLine &lt;&gt;&quot;&quot; then
sMsg = sMsg &amp; sLine &amp; chr(13)
end if
wend
Close #iNumber

	txtLog.Text = sMsg
	oDlgLog.Title = &quot;Log for &quot; &amp; FileNameoutofPath(sDocURL, &quot;/&quot;)
		oStatus.end()
	oDlgLog.execute

		
End Sub

Function getRepo()
&apos; Function used whenever we need to find the home repo URL
	aService = CreateUnoService(&quot;com.sun.star.util.PathSubstitution&quot;)
	sUserPath = aService.substituteVariables(&quot;$(home)&quot;, true)
	getRepo = sUserPath &amp; &quot;/.ooosvn&quot;
end Function

Function getWorkingDir()
&apos; Function used whenever we need to find the working directory path
	aService = CreateUnoService(&quot;com.sun.star.util.PathSubstitution&quot;)
	sUserPath = aService.substituteVariables(&quot;$(home)&quot;, true)
	getWorkingDir = mid(sUserPath &amp; &quot;/.ooosvn&quot;, 8)
end Function

Sub HelpAbout()
&apos; Function for loading the help dialogue.
Dim oDlgLog As Object
Dim txtLog As Object
Dim sMsg As String

	oDlgLog = _
		CreateUnoDialog(DialogLibraries.ooosvn.DlgHelp)
	
	With oDlgLog
		txtLog = .getControl(&quot;txtHelp&quot;)
	End With

	txtLog.Text = &quot;Visit OOoSVN on Sourceforge.net:&quot; &amp; chr(13) &amp; &quot;http://sourceforge.net/projects/ooosvn/&quot; &amp; chr(13) &amp; chr(13) &amp;_
						&quot;Please submit bug reports and feature requests to the issue tracker there.&quot; &amp; chr(13) &amp; chr(13) &amp;_
						&quot;This software is still beta.&quot;
	oDlgLog.Title = &quot;About OOoSVN&quot;
	oDlgLog.execute
		
End Sub

Function OperationLog(TitleBarMsg) as String
&apos; Function to display the operation log

Dim oDlgLog As Object
Dim txtLog As Object
Dim sMsg As String

	Dim oDoc
  Dim sDocURL
  Dim repo

  LoadTools
    If (Not GlobalScope.DialogLibraries.isLibraryLoaded(&quot;ooosvn&quot;)) Then
    GlobalScope.DialogLibraries.LoadLibrary(&quot;ooosvn&quot;)
  End If

    WorkingDir = getWorkingDir


&apos;	oDlgLog = _
&apos;		CreateUnoDialog(DialogLibraries.ooosvn.DlgLog)
	
&apos;	With oDlgLog
&apos;		txtLog = .getControl(&quot;txtAbout&quot;)
&apos;	End With
	
&apos;	iNumber = Freefile
	aFile = WorkingDir &amp; &quot;/operation.log&quot;
&apos;Open aFile For Input As iNumber
&apos;While not eof(iNumber)
&apos;Line Input #iNumber, sLine
&apos;If sLine &lt;&gt;&quot;&quot; then
&apos;sMsg = sMsg &amp; sLine &amp; chr(13)
&apos;end if
&apos;wend
&apos;Close #iNumber

&apos;	txtLog.Text = sMsg
&apos;	oDlgLog.Title = TitleBarMsg
&apos;	oDlgLog.execute

If FileExists(aFile) then

&apos; Load operation.log as a document to work around 65536 character string limit
	StarDesktop.loadComponentfromURL(converttourl(aFile),&quot;_blank&quot;, 0, Array(MakePropertyValue(&quot;ReadOnly&quot;, True)))
	&apos;oStatus.end()
   &apos;		else
   	&apos;	oStatus.end()
   		
   		&apos;Error Log window
   	&apos;OperationLog(&quot;Failed to recover document! Log follows...&quot;)
end if


End Function

Function LastOperationLog
&apos; Function to call the operation log function on its own

    WorkingDir = getWorkingDir

OperationLog(WorkingDir &amp; &quot;/operation.log&quot;)

End Function

REM ========================================================
&apos; PSEUDO CODE!
&apos;Function ConnectToSVN(sSVNDir) as integer
 &apos;       ConnectToSVN = true
       
  &apos;      aDocList = aFileList(sSVNDir)
   &apos;     if aDocList(0) = &quot;&quot; then
    &apos;            ConnectToSVN = false
     &apos;           bConnected = false
      &apos;          MsgBox(&quot;Failed to connect to the SVN&quot;)
       &apos;         exit function
       &apos; end if
       &apos; bConnected = true
&apos;end function

REM ========================================================
Function PickFolder( cFolder, desc, title ) as string
   oFolderPickerDlg = createUnoService( &quot;com.sun.star.ui.dialogs.FolderPicker&quot; )
   If Len( cFolder ) &gt; 0 Then
      oFolderPickerDlg.setDisplayDirectory( ConvertToURL( cFolder ) )
   EndIf
   If len(title)&gt;0 then
		oFolderPickerDlg.title = title
   End if
   oFolderPickerDlg.title = desc
   oFolderPickerDlg.execute()
   cPickedFolder = oFolderPickerDlg.getDirectory()
   PickFolder = ConvertFromURL( cPickedFolder )
End Function

Sub LoadTools
  If (Not GlobalScope.BasicLibraries.isLibraryLoaded(&quot;Tools&quot;)) Then
    GlobalScope.BasicLibraries.LoadLibrary(&quot;Tools&quot;)
  End If
end sub

REM ========================================================
Function FileName(oDoc as Object) as string
        If (oDoc.hasLocation()) Then
          sDocURL = oDoc.getURL()
          
          WorkingDir = getWorkingDir

          &apos; Test for repo existence.
          If NOT FileExists(WorkingDir) then
                msgbox (&quot;Working directory &quot; &amp; WorkingDir &amp; &quot; not found.  Creating.&quot;, 16, &quot;Error&quot;)
               CreateWorkingDir
                FileName = &quot;&quot;
        &apos;    exit function
          end if
          
          repo = getRepo
      
          &apos; Test for repo existence.
          If NOT FileExists(repo &amp; &quot;/README.txt&quot;) then
                msgbox (&quot;Repository not found. Create it using:&quot; &amp; chr(13) &amp; &quot;svnadmin create --fs-type fsfs &quot; &amp; mid(repo, 8) &amp; chr(13) &amp; &quot;Then all scripts should be placed in &quot; &amp; WorkingDir, 16, &quot;Repository Error&quot;)
                FileName = &quot;&quot;
            exit function
          end if
        Else
                &apos; If file has not been saved, it can&apos;t be imported.
            MsgBox(&quot;File has not been saved so can not be placed under version control.  Save the file to disk before reattempting.&quot;, 16, &quot;File not imported&quot;)
                FileName = &quot;&quot;
                exit function
        End If
        FileName = sDocURL
end function

REM ========================================================
Function MyShell(sCmd, Optional sPrm)
	if IsMissing(sPrm) then
		sPrm = &quot;&quot;
	end if
	MyShell = Shell(sCmd, 6, sPrm, True)
end function

Function ErrBox(sMsg)
	MsgBox(sMsg, 48, &quot;Error&quot;)
end function

Function IsWebAdd(sURL as string) as integer
	IsWebAdd = false
	if left(sURL,7) = &quot;http://&quot; then
		IsWebAdd = true
	end if	
end function

REM ========================================================
function CallConnectToSVN
	CallConnectToSVN = true

&apos;&apos; not working!	
&apos;&apos;	if not isempty(sGlobalRepoURL) then
&apos;&apos;		ret = MsgBox(&quot;Already connected to repository:&quot; &amp; chr$(13) &amp; sGlobalRepoURL &amp; chr$(13) &amp; &quot;Are you sure you want to connect to another one?&quot;, 48 + 4 + 128, &quot;Warning&quot;)
&apos;&apos;		if ret = 7 then
&apos;&apos;			CallConnectToSVN = false
&apos;&apos;			exit function
&apos;&apos;		end if
&apos;&apos;	end if
		
	
&apos;&apos;	sRepoURL = InputBox(&quot;Enter repository folder or repository URL:&quot;)
	
	exitOK=com.sun.star.ui.dialogs.ExecutableDialogResults.OK
	Library=DialogLibraries.GetByName(&quot;ooosvn&quot;)
	Dialog=Library.GetByName(&quot;SelectRepo&quot;)
	Dlg=CreateUnoDialog(Dialog)

	If Dlg.Execute &lt;&gt; exitOK then
		CallConnectToSVN = false
		exit function
	End If
	URLField=Dlg.GetControl(&quot;ComboBox1&quot;)
	sRepoURL=URLField.Text
	if not IsWebAdd(sURL) then
		sRepoURL = &quot;file://&quot; &amp; sRepoURL
	end if 
			
&apos;	sRepoURL = PickFolder( sGetHomeURL(), &quot;Pick a repository folder or give full URL&quot;, &quot;&quot;)
&apos;	sRepoURL = &quot;file:///tmp/avielTMP/svn&quot;
	Dlg.Dispose
	CallConnectToSVN = ConnectToSVN(sRepoURL)
end function

REM ========================================================
Function ConnectToSVN(sSVNURL) as integer
	ConnectToSVN = true
	
	REM Is SVN installed?
	&apos;ya implement!
	
	REM Estaplish a working directory
	sWorkingDir = GetWorkingDir
	If NOT FileExists(WorkingDir) then
		ConnectToSVN = false
		bConnected = false
		sRepoURL = &quot;&quot;
		exit function
	end if
		
	REM Validate repository by calling &quot;svn info&quot;
	ret = Shell(&quot;svn info &quot;, 6, sSVNURL,true)
	if (ret &lt;&gt; 0) then
		ConnectToSVN = false
		bConnected = false
		sRepoURL = &quot;&quot;
		ErrBox(&quot;Failed to connect to repository &quot; &amp; chr$(13) &amp; sSVNURL)
		exit function
	end if
	bConnected = true
	sGlobalRepoURL = sSVNURL
end function
</script:module>