<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="UUID" script:language="StarBasic">Function GetRepoUUID
&apos; A function to find the correct URL from the documents Repo UUID in meta.xml
   oDoc = thisComponent
   oInfo = oDoc.DocumentInfo()
   sDocURL = oDoc.getURL()
&apos;   oDoc.DocumentInfo.AddProperty(&quot;Repository-UUID&quot;,0,&quot;Test&quot;)
If oDoc.DocumentInfo.PropertySetInfo.HasPropertyByName(&quot;Repository-UUID&quot;) Then
UUID = oDoc.DocumentInfo.getPropertyValue(&quot;Repository-UUID&quot;)
Else UUID = &quot;&quot;
End If
If Len(UUID) &lt; 32 Then
MsgBox(&quot;No repo-UUID stored in document.&quot;) &apos;Place holder.  Needs bespoke dialogue for repo selection.
End If
&apos;msgbox(UUID)
URL = GetURLfromUUID(UUID)
   If Len(URL) &lt; 10 Then
   Msgbox(&quot;Repository &quot; &amp; UUID &amp; &quot; not found in your database.&quot;)
   Else
   Msgbox(URL)
   End IF

End Function

Function GetDocumentUUID
&apos; A function to find the documents UUID in meta.xml
   oDoc = thisComponent
   oInfo = oDoc.DocumentInfo()
   sDocURL = oDoc.getURL()
   If oDoc.DocumentInfo.PropertySetInfo.HasPropertyByName(&quot;Document-UUID&quot;) Then
GetDocumentUUID = oDoc.DocumentInfo.getPropertyValue(&quot;Document-UUID&quot;)
Else
GetDocumentUUID=&quot;&quot;
End If
End Function

Function GetParentUUID
&apos; A function to find the parent documents UUID in meta.xml
   oDoc = thisComponent
   oInfo = oDoc.DocumentInfo()
   sDocURL = oDoc.getURL()
      If oDoc.DocumentInfo.PropertySetInfo.HasPropertyByName(&quot;Parent-UUID&quot;) Then
GetParentUUID = oDoc.DocumentInfo.getPropertyValue(&quot;Parent-UUID&quot;)
Else
GetParentUUID=&quot;&quot;
End If
End Function

Function GetStoredURL
&apos; A function to find a location from meta.xml (unused?)
   oDoc = thisComponent
   oInfo = oDoc.DocumentInfo()
   sDocURL = oDoc.getURL()
      If oDoc.DocumentInfo.PropertySetInfo.HasPropertyByName(&quot;Doc-URL&quot;) Then
GetStoredURL = oDoc.DocumentInfo.getPropertyValue(&quot;Doc-URL&quot;)
Else
GetStoredURL=&quot;&quot;
End If
End Function

Function generateUUID
&apos; Makes a 128-bit hex string delimited with hyphens like a SVN repo UUID

Dim iVar1 As String
Dim iVar2 As String 
Dim iVar3 As String 
Dim iVar4 As String 
Dim iVar5 As String 
Dim iVar6 As String 
Dim iVar7 As String 
Dim iVar8 As String 

 keyBase = (2 ^ 16) - 1

 Randomize 
 iVar1 = LeadingZeros(Hex(( keyBase * Rnd) ))
 Randomize
 iVar2 = LeadingZeros(Hex(( keyBase * Rnd) ))
 Randomize
 iVar3 = LeadingZeros(Hex(( keyBase * Rnd) ))
 Randomize
 iVar4 = LeadingZeros(Hex(( keyBase * Rnd) ))
 Randomize
 iVar5 = LeadingZeros(Hex(( keyBase * Rnd) ))
 Randomize
 iVar6 = LeadingZeros(Hex(( keyBase * Rnd) ))
 Randomize
 iVar7 = LeadingZeros(Hex(( keyBase * Rnd) ))
 Randomize
 iVar8 = Hex(( keyBase * Rnd) )
 
 generateUUID = iVar1 &amp; iVar2 &amp; &quot;-&quot; &amp; iVar3 &amp; &quot;-&quot; &amp; iVar4 &amp; &quot;-&quot; &amp; iVar5 &amp; &quot;-&quot; &amp;  iVar6 &amp; iVar7 &amp; iVar8 &apos;strings together all of the hex values

End Function


Function LeadingZeros( iValue As String) As String 
&apos; Add leading zeros to a hex
   Dim iLen As Integer  
     iLen = 4
 
 LeadingZeros = iValue
 
   if (Len(LeadingZeros) &gt;= iLen) then 
     exit Function 
   else 
     Do While Len(LeadingZeros) &lt; iLen 
       LeadingZeros = &quot;0&quot; &amp; LeadingZeros
       
     Loop 
   endif
 
 
 End Function 
</script:module>